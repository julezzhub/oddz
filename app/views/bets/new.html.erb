<div id="page1">
  <% if params[:target][:kind] == "youtube#video" %>
    <div id="bet-form-thumbnail-vid"><img src= "<%= params[:thumbnail] %>" alt="Thumbnail"></div>
  <% else %>
    <div id="bet-form-thumbnail-channel"><img src= "<%= params[:thumbnail] %>" alt="Thumbnail"></div>
  <% end %>
  <%= simple_form_for(@bet) do |f| %>
    <% if params[:target][:kind] == "youtube#video" %>
      <p id="target-type" hidden>video</p>
      <%= hidden_field_tag :target, params[:target][:videoId] %>
<!--           <h6 id="target-notice"><b><%#= params[:title] %></b></h6> -->
      <div id="metric">
          <h3 id="subheader">Tap the statistic you want to bet on!</h3>
          <div id="current-stats-box" class="current-stats-box">
            <div class="current-stats">
              <%= image_tag "video.svg" %>
              <div>
                <p id="current-label" class="current-label-summary"><span>Views</span></p>
                <p id="current-view-count"><%= number_with_delimiter(@statistics["viewCount"], delimiter: ',') %></p>
              </div>
            </div>
            <div class="current-stats">
              <div>
                <p id="current-label" class="current-label-summary"><span>Comments</span></p>
                <p id="current-comment-count"><%= number_with_delimiter(@statistics["commentCount"], delimiter: ',') %></p>
              </div>
              <%= image_tag "comments.svg" %>
            </div>
            <div class="current-stats">
              <%= image_tag "thumbs_up.svg" %>
              <div>
                <p id="current-label" class="current-label-summary"><span>Likes</span></p>
                <p id="current-like-count"><%= number_with_delimiter(@statistics["likeCount"], delimiter: ',') %></p>
              </div>
            </div>
            <div class="current-stats">
              <div>
                <p id="current-label" class="current-label-summary"><span>Dislikes</span></p>
                <p id="current-dislike-count"><%= number_with_delimiter(@statistics["dislikeCount"], delimiter: ',') %></p>
              </div>
              <%= image_tag "thumbs_up.svg", style:"transform: rotate(180deg)" %>
            </div>
          </div>
      </div>

    <% else %>
      <p id="target-type" hidden>channel</p>
      <%= hidden_field_tag :target, params[:target][:channelId] %>
<!--           <h6 id="target-notice"><b><%#= params[:title] %></b></h6> -->
      <div id="metric">
        <h3 id="subheader">Tap the statistic you want to bet on!</h3>
        <div id="current-stats-box" class="current-stats-box">
            <div class="current-stats">
              <%= image_tag "friend.svg", style:"height: 50px; margin-top: 15px" %>
              <div>
                <p id="current-label"><span>Subscribers</span></p>
                <p><%= number_with_delimiter(@statistics["subscriberCount"], delimiter: ',') %></p>
              </div>
            </div>
            <div class="current-stats">
              <div>
                <p id="current-label"><span>Total Views</span></p>
                <p><%= number_with_delimiter(@statistics["viewCount"], delimiter: ',') %></p>
              </div>
              <%= image_tag "video.svg" %>
            </div>
          </div>
      </div>
    <% end %>
    <div id="metric-tag"></div>


  <div class="d-none", id="metric-count">
    <h6 class="walkthrough-text" id="metric-count-message">Your Bet:</h6>
    <%= f.input :metric_count, label: false, input_html: { class: "bet_metric_count", type:"text", inputmode:"numeric", pattern:"[0-9]*" } %>
    <%= hidden_field_tag :hidden_metric_count, value:""%>
    <h6 id="metric-error" class="walkthrough-text"></h6>
  </div>

</div>



<div class="d-none" id=page2>
  <div id="time">
    <h3 class="form-h3">Bet Duration</h3>
    <div class="row">
      <div class="col">
        <p>Days</p>
        <%= select_tag :days, options_for_select(["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", *(10..30)]) %>
      </div>
      <div class="col">
        <p>Hours</p>
        <%= select_tag :hours, options_for_select(["00", "01", "02", "03", "04", "05", "06", "07", "08", "09", *(10..23)]) %>
      </div>
<!--  <div class="col">
        <p>Minutes</p>
        <%#= select_tag :minutes, options_for_select(0..59)%>
      </div> -->
      <%= hidden_field_tag :duration, 0, id:"duration" %>
    </div>
  </div>

  <div id="stake" class="d-none">
    <h3 class="form-h3">Stake</h3>
    <%= f.input :stake, label: 'oddz coins', input_html: { class: 'js-range-slider1'} %>
  </div>

  <h6 id="stake-error" class="walkthrough-text"></h6>
  <div id="friend-bet-form" class="d-none">
    <h3 class="form-h3">Opponent</h3>
    <div id="friend-selection">
      <div id="opponent-avatar">
        <%= image_tag "friend.svg" %>
      </div>
      <%= f.input :friend, label: false, collection: current_user.friend_names, prompt: "Select a friend", input_html: { class: "bet_friend"} %>
  <!--<%#= select_tag :friend, options_from_collection_for_select(current_user.friends, 'id', 'username'), label: "Choose your friend" %> -->
    </div>
  </div>
</div>

<div class="d-none" id="summary">

  <div class="title-for-details-show"><h1><%= "Bet Summary" %></h1></div>
<div class="details-container" id="details-show-container">
  <div class="image-container" style="background-image: linear-gradient(rgba(10,10,10,0.4), rgba(50,50,50,0.05)), url(<%= params[:thumbnail] %>)" id="details-show-thumbnail">
  <div class="d-flex align-items-center justify-content-between"  id="avatar-for-details" >
    <div class="d-flex align-items-center">
      <!-- <img src="<%#= @bet.user.avatar %>" class="avatar-large-bordered m-0" crop: :fill style="object-fit: cover" /> -->
      <p class="my-0 ml-2" id="friend-summary"></p>
    </div>
  </div>
  </div>
  <div class="details-infos">

    <div class="details-title" style="position: absolute, bottom: 38%;">
      <h5 style="color: white" id="target-summary"> </h5>
      <div class="current-metric" style="top: 48%">
        <div><%= image_tag("play_white.svg", size: '20') %><h6 id='current-stats-summary' style="display: inline; margin-left: 5px"></h6></div>
      </div>
    </div>
    <div class="details-lowerwrapper d-flex px-0">

      <div class="details-attributes col-4 px-0 mx-0"><p>STAKE</p>
        <%=image_tag("oddz_coin_purple.svg", size: '30') %>
        <p style="font-size: 14px" id="stake-summary"></p>
      </div>
      <div class="details-attributes col-4 px-0 mx-0"><p id="hidden_metric_count_title" ></p>
        <%=image_tag("video.svg", size: '30') %>
        <p style="font-size: 14px" id="summary-metric-count"></p>
      </div>
      <div class="details-attributes col-4 px-0 mx-0"><p>DEADLINE</p>
        <%=image_tag("time.svg", size: '30') %>
        <p style="font-size: 14px" id="metric_count_time-summary"></p>
      </div>
    </div>
  </div>
</div>

</div>

<div class="betbar-filter"></div>
<div class="betbar-filter2"></div>
<div id="progress-bar" class="progress-bar">
  <%= link_to new_search_path do %>
    <%= image_tag "search.svg", id:"recipe1backward", class:"arrow-left", style:"width: 33%" %>
  <% end %>
  <%= image_tag "arrow_left.svg", id:"recipe2backward", class:"d-none arrow-left" %>
  <%= image_tag "arrow_left.svg", id:"summary-backward", class:"d-none arrow-left" %>
  <div id="progress-btn" class="round-button" style="margin: 0 auto">
    <div class="round-button-circle">
      <%= f.button :submit, value:"BET", id:"bet-btn", class:"d-none", data: {
               disable_with: 'BET' } %>
      <div id="circle">
        <svg width="88px" height="70.4px" id="circle_svg">
          <circle cx="41" cy="41" r="40"></circle>
        </svg>
          <p id="progress-text">20%</p>
      </div>
    </div>
  </div>
  <%= image_tag "arrow_right.svg", id:"recipe1forward", class:"d-none arrow-right" %>
  <%= image_tag "arrow_right.svg", id:"recipe2forward", class:"d-none arrow-right" %>
</div>
<%= hidden_field_tag :thumbnail, params[:thumbnail] %>
<%= hidden_field_tag :title, params[:title] %>
<% end %>

<script>
  const recipe1forward = document.getElementById('recipe1forward')
  const recipe1backward = document.getElementById('recipe1backward')

  const targetType = document.getElementById('target-type').innerText

  document.querySelectorAll('.current-stats').forEach(stat => {
    stat.addEventListener('click', event => {
      document.querySelectorAll('.current-stats').forEach(stat => {
        stat.classList.remove('selected')
      })
      document.querySelectorAll('#metric_tag').forEach(item => {
        item.innerHTML = ""
      })
    stat.classList.add('selected');
    switch (document.querySelector('.selected span').innerText.toLowerCase()) {
      case 'views':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Views', id:'hidden_metric_tag' %>';
        break;
      case 'comments':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Comments', id:'hidden_metric_tag'%>';
        break;
      case 'likes':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Likes', id:'hidden_metric_tag' %>';
        break;
      case 'dislikes':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Dislikes', id:'hidden_metric_tag' %>';
        break;
      case 'subscribers':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Subscribers', id:'hidden_metric_tag' %>';
        break;
      case 'total views':
        document.getElementById('metric-tag').innerHTML = '<%= hidden_field_tag :metric, 'Total Views', id:'hidden_metric_tag' %>';
        break;
      }

    const hidden_metric = document.getElementById('hidden_metric_tag').value

    document.getElementById('bet_metric_count').placeholder = "How many " + hidden_metric.toLowerCase() + " will this " + targetType + " get?"
    })

  })
  // 1. when a metric is selected, change the placeholder of the metric count field and show it

  document.getElementById('current-stats-box').addEventListener('click', function() {
    document.getElementById('metric-count').classList.remove('d-none');
    document.getElementById('progress-text').classList.add('scaled1');
    document.getElementById('progress-text').innerHTML = "40%";
    document.getElementById('circle_svg').classList.add('transition1');
  },
  { once: true }
  )
  // 2. When a metric is selected, change the progress bubble

  document.getElementById('bet_metric_count').addEventListener('change', function() {
      document.getElementById('progress-text').classList.add('scaled2');
      document.getElementById('progress-text').innerHTML = "60%"
      document.getElementById('circle_svg').classList.add('transition2');
  },
  { once: true }
  )
  // 3. when a metric count is selected, change the progress bubble

/*  document.getElementById('page1').addEventListener('change', function() {
    if (document.getElementById('bet_metric_count').value === "") {
        recipe1forward.classList.add('d-none');
    } else {
      recipe1forward.classList.remove('d-none');
    }
  })*/
  // 4. show arrow to page2 only when metric and metric count are given

  const recipe2forward = document.getElementById('recipe2forward')
  const recipe2backward = document.getElementById('recipe2backward')

  recipe1forward.addEventListener('click', function() {
    this.classList.add("d-none")
    document.getElementById('page1').classList.add("d-none")
    document.getElementById('page2').classList.remove("d-none")
    recipe1backward.classList.add("d-none")
    recipe2backward.classList.remove("d-none")
    if (document.getElementById('bet_friend').value !== "" &&
      !(document.getElementById('days').value === "00" &&
        document.getElementById('hours').value === "00")) {
      recipe2forward.classList.remove('d-none');
    }
  })
  // 5. when you click on the rightward arrow, you get to the next page

  document.getElementById('time').addEventListener('change', function() {
    document.getElementById('duration').value =
      parseInt(document.getElementById('days').value, 10) * 86400
      + parseInt(document.getElementById('hours').value, 10) * 3600
/*      + document.getElementById('minutes').value * 60 */
    document.getElementById('stake').classList.remove('d-none');
    if (parseInt(document.getElementById('nav-money').innerText.replace(/\./g,''), 10) >= document.getElementById('bet_stake').value) {
      document.getElementById('friend-bet-form').classList.remove('d-none');
    } else {
      document.getElementById('stake-error').innerText = "Insufficient funds"
    }
  })
  // 6. whenever sth in the time field changes, update the "duration" hidden field tag

  document.getElementById('time').addEventListener('change', function() {
    document.getElementById('progress-text').classList.add('scaled3');
    document.getElementById('progress-text').innerHTML = "80%"
    document.getElementById('circle_svg').classList.add('transition3');
  },
  { once: true }
  )
  // 7. when a time is selected, change the progress bubble

  document.getElementById('stake').addEventListener('touchend', function() {
      if (parseInt(document.getElementById('nav-money').innerText.replace(/\./g,''), 10) < document.getElementById('bet_stake').value) {
      document.getElementById('friend-bet-form').classList.add('d-none');
      document.getElementById('stake-error').innerText = "Insufficient funds";
      recipe2forward.classList.add('d-none')
    } else {
      document.getElementById('friend-bet-form').classList.remove('d-none');
      document.getElementById('stake-error').innerText = ""
      if (document.getElementById('bet_friend').value !== ""
        && !(document.getElementById('days').value === "00"
          && document.getElementById('hours').value === "00")) {
      recipe2forward.classList.remove('d-none')}
    }
  })

  document.getElementById('bet_friend').addEventListener('change', function() {
    // const opponent = document.getElementById('bet_friend').value
    // const percentagesign = "%"
    // document.getElementById('opponent-avatar').innerHTML = "<%#= cl_image_tag User.find_by(username: '" + opponent + "').avatar %>"
    document.getElementById('progress-text').classList.add('scaled4');
    document.getElementById('progress-text').innerHTML = "100%"
    document.getElementById('circle_svg').classList.add('transition4');
    document.getElementById('progress-btn').classList.add('shake');
  })
  // 8. when a friend is selected, change the progress bubble

  document.getElementById('page2').addEventListener('change', function() {
    if (document.getElementById('bet_friend').value !== ""
      && !(document.getElementById('days').value === "00"
        && document.getElementById('hours').value === "00")) {
      recipe2forward.classList.remove('d-none');
    } else {
      recipe2forward.classList.add('d-none');
    }
  })
  // 9. show arrow to summary only when duration, stake and friend are given

  recipe2backward.addEventListener('click', function() {
    document.getElementById('page2').classList.add("d-none")
    document.getElementById('page1').classList.remove("d-none")
    document.getElementById('recipe2backward').classList.add("d-none")
    document.getElementById('recipe2forward').classList.add("d-none")
    document.getElementById('recipe1backward').classList.remove("d-none")
    document.getElementById('recipe1forward').classList.remove("d-none")
  })
  // when you click on the leftward arrow, you get to page 1

  recipe2forward.addEventListener('click', function() {
    document.getElementById('page2').classList.add("d-none")
    document.getElementById('recipe2backward').classList.add("d-none")
    document.getElementById('recipe2forward').classList.add("d-none")
    document.getElementById('summary').classList.remove("d-none")
    document.getElementById('summary-backward').classList.remove("d-none")
    document.getElementById('circle').classList.add('d-none')
    document.getElementById('bet-btn').classList.remove('d-none')

    document.getElementById('target-summary').innerHTML = "<%= params[:title] %>"

    if (document.getElementById('days').value !== "00") {
      document.getElementById('metric_count_time-summary').innerHTML =
        document.getElementById('days').value + " days and "
        document.getElementById('hours').value + " hours"
    } else {
      document.getElementById('metric_count_time-summary').innerHTML =
        document.getElementById('hours').value + " hours"
    }
/*      + document.getElementById('minutes').value + " minutes."
*/
  //   const current_stat_in_sum = document.getElementById('current-label').innerText;
  //   if (current_stat_in_sum === 'Views')  {
  //     document.getElementById('current-stats-summary').innerText =
  //     document.getElementById('current-view-count').value
  //   } else if ((current_stat_in_sum) === 'Comments') {
  //     document.getElementById('current-stats-summary').innerText =
  //     document.getElementById('current-comment-count').value
  //   } else if ((current_stat_in_sum) === 'Likes') {
  //     document.getElementById('current-stats-summary').innerText =
  //     document.getElementById('current-like-count').value
  //   } else {
  //     ((current_stat_in_sum) === 'Dislikes') {
  //     document.getElementById('current-stats-summary').innerText =
  //     document.getElementById('current-dislike-count').value
  //   }
  // }

    document.getElementById('current-stats-summary').innerText =
      document.querySelector('.selected div p:nth-child(2)').innerText

    document.getElementById('summary-metric-count').innerHTML =
      document.getElementById('bet_metric_count').value

    // document.getElementById('metric_count_time-summary').innerHTML =


    document.getElementById('hidden_metric_count_title').innerText = hidden_metric_tag.value.toUpperCase()

    document.getElementById('stake-summary').innerHTML =
      `${document.getElementById('bet_stake').value} coins`

    document.getElementById('friend-summary').innerHTML =
      document.getElementById('bet_friend').value

  })
  // when you click on the rightward arrow, you get to the summary page
  // which is simultaneously being populated with the user's input
  // (toLocaleString adds the thousand separators on the metric for readability)

  document.getElementById('summary-backward').addEventListener('click', function() {
    document.getElementById('summary').classList.add("d-none")
    document.getElementById('page2').classList.remove("d-none")
    document.getElementById('progress-bar').classList.remove('d-none')
    document.getElementById('circle').classList.remove('d-none')
    document.getElementById('bet-btn').classList.add('d-none')
    document.getElementById('summary-backward').classList.add('d-none')
    document.getElementById('recipe2backward').classList.remove('d-none')
    document.getElementById('recipe2forward').classList.remove('d-none')
  })
  //when you click on the backward arrow, you get to page 2 again
</script>

<%= content_for :after_js do %>
  <%= javascript_pack_tag "new_bet_form" %>
<% end %>
